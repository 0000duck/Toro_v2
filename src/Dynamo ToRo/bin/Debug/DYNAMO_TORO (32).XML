<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DYNAMO_TORO</name>
    </assembly>
    <members>
        <member name="T:Dynamo_TORO.WIP_ROBARCH">
            <summary>
            Container for RobArch workflow
            </summary>
        </member>
        <member name="M:Dynamo_TORO.WIP_ROBARCH.vis_tool(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Create geometry representation of tool.
            </summary>
            <param name="frame">Tool frame at drill tip</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_ROBARCH.vis_wobj(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Create geometry representation of wobj.
            </summary>
            <param name="frame">Wobj frame at cube centroid</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_ROBARCH.sortPolar3_Plane(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane},System.Int32)">
            <summary>
            Sort planes by directionality about average pole and shift.
            </summary>
            <param name="planeList">List of planes</param>
            <param name="shift">Shift value</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_ROBARCH.sortPolar3_Index(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane},System.Int32)">
            <summary>
            Sort planes by directionality about average pole and shift.
            </summary>
            <param name="planeList">List of planes</param>
            <param name="shift">Shift value</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_ROBARCH.testAngular1_Node(System.Collections.Generic.List{WireFrameToRobot.Node},Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Test strut normals of nodes against guide vector using angular tolerance.
            </summary>
            <param name="nodeList">List of nodes to test</param>
            <param name="guide">Guide vector (Default: World +ZAxis)</param>
            <param name="tolerance">Angular tolerance (degrees)</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_ROBARCH.testAngular2_Node(System.Collections.Generic.List{WireFrameToRobot.Node},System.Double)">
            <summary>
            Test strut normals of node against each other using angular tolerance.
            </summary>
            <param name="nodeList">List of nodes to test</param>
            <param name="tolerance">Angular tolerance (degrees)</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_ROBARCH.flip_Plane2(Autodesk.DesignScript.Geometry.Plane,System.Boolean)">
            <summary>
            Reverse normal and retain rotation of plane.
            </summary>
            <param name="plane">Plane to flip</param>
            <param name="retain">Retain X-Axis?</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_ROBARCH.getLinesPlaneAtPoint(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Line},System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            For each point get list of and reorient all lines and get list of planes.
            </summary>
            <param name="lines">List of lines</param>
            <param name="points">List of points</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_ROBARCH.getLinesCoordSysAtPoint(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Line},System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            For each point get list of and reorient all lines and get list of planes.
            </summary>
            <param name="lines">List of lines</param>
            <param name="points">List of points</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_ROBARCH.createDrillRoutine_Nodes(System.String,System.Collections.Generic.List{WireFrameToRobot.Node})">
            <summary>
            Create routine for an ABB robot with stationary drill and mobile workpiece.
            </summary>
            <param name="directory">Directory to write files ("C:\")</param>
            <param name="nodes">A list of nodes</param>
            <returns>filePaths</returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_ROBARCH.createDrillRoutine_Planes(System.String,System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane})">
            <summary>
            Create routine for an ABB robot with stationary drill and mobile workpiece.
            </summary>
            <param name="directory">Directory to write files ("C:\")</param>
            <param name="planes">A list of planes to drill</param>
            <returns>filePaths</returns>
        </member>
        <member name="T:Dynamo_TORO.WIP_Welding">
            <summary>
            testing
            </summary>
        </member>
        <member name="M:Dynamo_TORO.WIP_Welding.createWeldRoutine0(System.String,System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane},System.Double,System.Double,System.Double)">
            <summary>
            Create a spot-welding routine.
            </summary>
            <param name="filePath">File path</param>
            <param name="planes">Targets as planes</param>
            <param name="waitTime">Duration between welds (sec) </param>
            <param name="weldTime">Duration of weld (sec)</param>
            <param name="retract">Distance offset (Z) from target in tool-space</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_Welding.createWeldRoutine1(System.String,System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create a spot-welding routine (with exit routine).
            </summary>
            <param name="filePath">File path</param>
            <param name="planes">Targets as planes</param>
            <param name="waitTime">Duration between welds (sec) </param>
            <param name="weldTime">Duration of weld (sec)</param>
            <param name="retract_tool">Distance offset (Z) from target in tool-space</param>
            <param name="retract_world">Distance offset (Z) from target in world-space</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_Welding.createWeldRoutine2(System.String,System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create a spot-welding routine (with exit routine, with waittime-per-distance function).
            </summary>
            <param name="filePath">File path</param>
            <param name="planes">Targets as planes</param>
            <param name="waitTime">Duration between welds (sec) </param>
            <param name="weldTime">Duration of weld (sec)</param>
            <param name="retract_tool">Distance offset (Z) from target in tool-space</param>
            <param name="retract_world">Distance offset (Z) from target in world-space</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_Welding.sortPointsByZ_2(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Sort points by Z value with indices; version 2.
            </summary>
            <param name="points">Point list</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.WIP_Welding.sortPlanesByZ_2(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane})">
            <summary>
            Sort planes by Z value with indices; version 2.
            </summary>
            <param name="planes">Plane list</param>
            <returns></returns>
        </member>
        <member name="T:Dynamo_TORO.ToroUIfunctions">
            <summary>
            Functions for the UI controls
            </summary>
        </member>
        <member name="T:Dynamo_TORO.DataTypes">
            <summary>
            Create datatype.
            </summary>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.RobTargetAtVals(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create robot target from coordinate and quaternion values.
            </summary>
            <param name="ptX">Coordinate</param>
            <param name="ptY">Coordinate</param>
            <param name="ptZ">Coordinate</param>
            <param name="q1">Quaternion</param>
            <param name="q2">Quaternion</param>
            <param name="q3">Quaternion</param>
            <param name="q4">Quaternion</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.RobTargetAtPoint(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create robot target from point and quaternion values.
            </summary>
            <param name="point">Point</param>
            <param name="q1">Quaternion</param>
            <param name="q2">Quaternion</param>
            <param name="q3">Quaternion</param>
            <param name="q4">Quaternion</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.RobTargetAtPlane(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Create robot target from plane.
            </summary>
            <param name="plane">Plane</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.JointTargetAtVals(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create joint target from rotational values per axis.
            </summary>
            <param name="j1">Degrees</param>
            <param name="j2">Degrees</param>
            <param name="j3">Degrees</param>
            <param name="j4">Degrees</param>
            <param name="j5">Degrees</param>
            <param name="j6">Degrees</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.Speeddata(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Define speeddata.
            </summary>
            <param name="varName">Name of speeddata variable</param>
            <param name="v_tcp">Speed at tool center point in mm/s</param>
            <param name="v_ori">Reorientation speed of the TCP in deg</param>
            <param name="v_leax">Linear speed of external axes in mm/s</param>
            <param name="v_reax">Rotational speed of external axes in deg</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.Zonedata(System.String,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Define zonedata.
            </summary>
            <param name="varName">Name of zonedata variable</param>
            <param name="pfine">T: stop-point | F: fly-by-point</param>
            <param name="pzone_tcp">Radius for TCP</param>
            <param name="pzone_ori">Radius for reorientation</param>
            <param name="pzone_eax">Radius for external axes</param>
            <param name="zone_ori">Radius for tool reorientation in deg</param>
            <param name="zone_leax">Radius for linear external axes in mm</param>
            <param name="zone_reax">Radius for rotating external axes in deg</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.Loaddata(System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Define loaddata.
            </summary>
            <param name="varName">Name of loaddata variable</param>
            <param name="load">Load in kg</param>
            <param name="cog_x">Center of gravity coordinate</param>
            <param name="cog_y">Center of gravity coordinate</param>
            <param name="cog_z">Center of gravity coordinate</param>
            <param name="aom_q1">Axes of moment quaternion</param>
            <param name="aom_q2">Axes of moment quaternion</param>
            <param name="aom_q3">Axes of moment quaternion</param>
            <param name="aom_q4">Axes of moment quaternion</param>
            <param name="ix">Inertia in kgm^2</param>
            <param name="iy">Inertia in kgm^2</param>
            <param name="iz">Inertia in kgm^2</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.Confdata(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Define confdata.
            </summary>
            <param name="varName">Name of confdata variable</param>
            <param name="cf1">Current quadrant or meter interval of axis 1</param>
            <param name="cf4">Current quadrant or meter interval of axis 4</param>
            <param name="cf6">Current quadrant or meter interval of axis 6</param>
            <param name="cfx">Current quadrant or meter interval of axis 2 | X</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.WZBoxAtVals(System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Define shapedata and create work-zone instruction for box.
            </summary>
            <param name="varName">Name of shapedata variable</param>
            <param name="Inside_Outside">Define as volume "Inside" | "Outside"</param>
            <param name="lo_x">Low point coordinate</param>
            <param name="lo_y">Low point coordinate</param>
            <param name="lo_z">Low point coordinate</param>
            <param name="hi_x">High point coordinate</param>
            <param name="hi_y">High point coordinate</param>
            <param name="hi_z">High point coordinate</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.WZBoxAtGeometry(System.String,System.String,Autodesk.DesignScript.Geometry.Cuboid)">
            <summary>
            Define shapedata and create work-zone instruction for box.
            </summary>
            <param name="varName">Name of shapedata variable</param>
            <param name="Inside_Outside">Define as volume "Inside" | "Outside"</param>
            <param name="box">Cuboidic work-zone</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.WZCylAtVals(System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Define shapedata and create work-zone instruction for cylinder.
            </summary>
            <param name="varName">Name of shapedata variable</param>
            <param name="Inside_Outside">Define as volume "Inside" | "Outside"</param>
            <param name="center_x">Coordinate</param>
            <param name="center_y">Coordinate</param>
            <param name="center_z">Coordinate</param>
            <param name="radius">Radius</param>
            <param name="height">Height</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.WZCylAtGeometry(System.String,System.String,Autodesk.DesignScript.Geometry.Cylinder)">
            <summary>
            Define shapedata and create work-zone instruction for cylinder.
            </summary>
            <param name="varName">Name of shapedata variable</param>
            <param name="Inside_Outside">Define as volume "Inside" | "Outside"</param>
            <param name="cylinder">Cylindrical work-zone</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.WZSphAtVals(System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Define shapedata and create work-zone instruction for sphere.
            </summary>
            <param name="varName">Name of shapedata variable</param>
            <param name="Inside_Outside">Define as volume "Inside" | "Outside"</param>
            <param name="center_x">Coordinate</param>
            <param name="center_y">Coordinate</param>
            <param name="center_z">Coordinate</param>
            <param name="radius">Radius</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.WZSphAtGeometry(System.String,System.String,Autodesk.DesignScript.Geometry.Sphere)">
            <summary>
            Define shapedata and create work-zone instruction for sphere.
            </summary>
            <param name="varName">Name of shapedata variable</param>
            <param name="Inside_Outside">Define as volume "Inside" | "Outside"</param>
            <param name="sphere">Spherical work-zone</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.WZLimJointDef(System.String,System.String,ABB.Robotics.Controllers.RapidDomain.JointTarget,ABB.Robotics.Controllers.RapidDomain.JointTarget)">
            <summary>
            Define joint-targets for joint limits.
            </summary>
            <param name="varName">Name of variables</param>
            <param name="Inside_Outside">Define as volume "Inside" | "Outside"</param>
            <param name="loJointVal">JointTarget</param>
            <param name="hiJointVal">JointTarget</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.ToolAtVals(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Define tooldata from coordinate, quaternion, and load values.
            </summary>
            <param name="x">Coordinate</param>
            <param name="y">Coordinate</param>
            <param name="z">Coordinate</param>
            <param name="q1">Quaternion</param>
            <param name="q2">Quaternion</param>
            <param name="q3">Quaternion</param>
            <param name="q4">Quaternion</param>
            <param name="load">Load in kg</param>
            <param name="name">Name of tooldata variable</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.ToolAtPoint(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Define tooldata from point, quaternion, and load values.
            </summary>
            <param name="pt">Point</param>
            <param name="q1">Quaternion</param>
            <param name="q2">Quaternion</param>
            <param name="q3">Quaternion</param>
            <param name="q4">Quaternion</param>
            <param name="load">Load in kg</param>
            <param name="name">Name of tooldata variable</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.ToolAtPlane(Autodesk.DesignScript.Geometry.Plane,System.Double,System.String)">
            <summary>
            Define tooldata from plane and load value.
            </summary>
            <param name="pl">Plane</param>
            <param name="load">Load in kg</param>
            <param name="name">Name of tooldata variable</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.WobjAtVals(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Define wobjdata from coordinate and quaternion values.
            </summary>
            <param name="x">Coordinate</param>
            <param name="y">Coordinate</param>
            <param name="z">Coordinate</param>
            <param name="q1">Quaternion</param>
            <param name="q2">Quaternion</param>
            <param name="q3">Quaternion</param>
            <param name="q4">Quaternion</param>
            <param name="name">Name of wobjdata variable</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.WobjAtPoint(Autodesk.DesignScript.Geometry.Point,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Define wobjdata from point and quaternion values.
            </summary>
            <param name="pt">Point</param>
            <param name="q1">Quaternion</param>
            <param name="q2">Quaternion</param>
            <param name="q3">Quaternion</param>
            <param name="q4">Quaternion</param>
            <param name="name">Name of wobjdata variable</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.DataTypes.WobjAtPlane(Autodesk.DesignScript.Geometry.Plane,System.String)">
            <summary>
            Define wobjdata from plane.
            </summary>
            <param name="pl">Plane</param>
            <param name="name">Name of wobjdata variable</param>
            <returns></returns>
        </member>
        <member name="T:Dynamo_TORO.Instructions">
            <summary>
            Create instructions.
            </summary>
        </member>
        <member name="M:Dynamo_TORO.Instructions.MoveL(System.Collections.Generic.List{ABB.Robotics.Controllers.RapidDomain.RobTarget},System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.String,System.String,System.String,System.Boolean)">
            <summary>
            Create a linear movement instruction.
            </summary>
            <param name="targets">Robot target</param>
            <param name="speed">Speed data (rounds to default in RobotStudio)</param>
            <param name="zone">Zone data (rounds to default in RobotStudio)</param>
            <param name="setName">Unique name for this instruction</param>
            <param name="toolName">Active tool</param>
            <param name="wobjName">Active work-object</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Instructions.MoveJ(System.Collections.Generic.List{ABB.Robotics.Controllers.RapidDomain.RobTarget},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.String,System.String,System.String)">
            <summary>
            Create a joint movement instruction.
            </summary>
            <param name="targets">Robot target</param>
            <param name="speed">Speed data (rounds to default in RobotStudio)</param>
            <param name="zone">Zone data (rounds to default in RobotStudio)</param>
            <param name="setName">Unique name of this instruction</param>
            <param name="toolName">Active tool</param>
            <param name="wobjName">Active work-object</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Instructions.MoveAbsJ(System.Collections.Generic.List{ABB.Robotics.Controllers.RapidDomain.JointTarget},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.String,System.String,System.String)">
            <summary>
            Create an absolute joint movement instruction.
            </summary>
            <param name="targets">Joint target</param>
            <param name="speed">Speed data (rounds to default in RobotStudio)</param>
            <param name="zone">Zone data (rounds to default in RobotStudio)</param>
            <param name="setName">Unique name for this instruction</param>
            <param name="toolName">Active tool</param>
            <param name="wobjName">Active work-object</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Instructions.MoveC(System.Collections.Generic.List{ABB.Robotics.Controllers.RapidDomain.RobTarget},System.Collections.Generic.List{ABB.Robotics.Controllers.RapidDomain.RobTarget},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.String,System.String,System.String)">
            <summary>
            Create a circular movement instruction.
            </summary>
            <param name="cirTarget">Robot target (through point)</param>
            <param name="toTarget">Robot target (destination)</param>
            <param name="speed">Speed data (rounds to default in RobotStudio)</param>
            <param name="zone">Zone data (rounds to default in RobotStudio)</param>
            <param name="setName">Unique name for this instruction</param>
            <param name="toolName">Active tool</param>
            <param name="wobjName">Active work-object</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Instructions.customInstruction(System.Collections.Generic.List{System.String})">
            <summary>
            Create custom instruction from string.
            </summary>
            <param name="instructions"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Instructions.insertInstAtIndex(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32})">
            <summary>
            Insert instructions into list at specified index.
            </summary>
            <param name="instList">Initial list of instructions</param>
            <param name="instructions">List of instructions to insert</param>
            <param name="index">List of indices at which to insert</param>
            <returns></returns>
        </member>
        <member name="T:Dynamo_TORO.Write">
            <summary>
            Write program to file.
            </summary>
        </member>
        <member name="M:Dynamo_TORO.Write.createRapid0(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Merge and write data to a destination.
            </summary>
            <param name="filePath">"C:\...\myPath.prg"</param>
            <param name="cnstList">List of constants</param>
            <param name="instList">List of instructions</param>
            <param name="toolList">List of tooldata</param>
            <param name="wobjList">List of work-object data</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Write.createRapid1(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Merge and write data to a destination.
            </summary>
            <param name="filePath">"C:\...\myPath.prg"</param>
            <param name="cnstList">List of constants</param>
            <param name="instList">List of instructions</param>
            <returns></returns>
        </member>
        <member name="T:Dynamo_TORO.Utilities">
            <summary>
            Create  utility.
            </summary>
        </member>
        <member name="M:Dynamo_TORO.Utilities.QuatListAtPlane(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Get list of quaternions from a plane.
            </summary>
            <param name="plane">The plane</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.InsertAtIndex(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Int32})">
            <summary>
            Insert an item into a list at specified index.
            </summary>
            <param name="list">Initial list</param>
            <param name="item">Item to insert</param>
            <param name="index">Index at which to insert</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.InsertGroupAtIndex(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Int32})">
            <summary>
            Insert a group of items into a list at specified index.
            </summary>
            <param name="list">Initial list</param>
            <param name="group">Group of items to insert</param>
            <param name="index">Index at which to insert</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.CombineListsByIndices(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Combine two lists by items and indices.
            </summary>
            <param name="listA"></param>
            <param name="listB"></param>
            <param name="indexA"></param>
            <param name="indexB"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.ZeroPadLeft(System.Double,System.Int32)">
            <summary>
            Until specified length, zero-pad a value at left.
            </summary>
            <param name="val">Initial value</param>
            <param name="numDigits">Total number of digits</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.ZeroPadRight(System.Double,System.Int32)">
            <summary>
            Until specified length, zero-pad a value at right.
            </summary>
            <param name="val">Initial value</param>
            <param name="numDigits">Total number of digits</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.DataToFile(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Create file at destination from data in Dynamo.
            </summary>
            <param name="filePath">Write to destination</param>
            <param name="robData">Data to write</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.FileToData(System.String)">
            <summary>
            Read data in Dynamo from file at destination.
            </summary>
            <param name="filePath">Read from destination</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortPointsByZ(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Sort points by Z value.
            </summary>
            <param name="points">Point list</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortVectorsByZ(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Vector})">
            <summary>
            Sort vectors by Z value.
            </summary>
            <param name="vectors">Vectors list</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortPlanesByZ(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane})">
            <summary>
            Sort planes by Z value.
            </summary>
            <param name="planes">Plane list</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortPlanesByZ(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.CoordinateSystem})">
            <summary>
            Sort coordinate systems by Z value.
            </summary>
            <param name="coordSys">Coordinate system list</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortPolar1_Point(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Sort points by directionality about arbitrary pole.
            </summary>
            <param name="pointList"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortPolar1_Vector(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Vector})">
            <summary>
            Sort vectors by directionality about arbitrary pole.
            </summary>
            <param name="vecList"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortPolar1_Plane(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane})">
            <summary>
            Sort planes directionality about arbitrary pole.
            </summary>
            <param name="planeList">List of Planes</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortPolar1_CoordSys(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.CoordinateSystem})">
            <summary>
            Sort coordinate systems directionality about arbitrary pole.
            </summary>
            <param name="csList">List of coordinate systems</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortPolar2_Vector(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Point},System.Int32)">
            <summary>
            Sort points by directionality about average pole and shift.
            </summary>
            <param name="vectorList">List of points</param>
            <param name="shift">Shift value</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortPolar2_Vector(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Vector},System.Int32)">
            <summary>
            Sort vectors by directionality about average pole and shift.
            </summary>
            <param name="vecList">List of vectors</param>
            <param name="shift">Shift value</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortPolar2_Plane(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane},System.Int32)">
            <summary>
            Sort planes by directionality about average pole and shift.
            </summary>
            <param name="planeList">List of planes</param>
            <param name="shift">Shift value</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.sortPolar2_CoordSys(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.CoordinateSystem},System.Int32)">
            <summary>
            Sort coordinate systems by directionality about average pole and shift.
            </summary>
            <param name="csList">List of coordinate systems</param>
            <param name="shift">Shift value</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.shiftList(System.Collections.Generic.List{System.Object},System.Int32)">
            <summary>
            Shift the contents of a list by value.
            </summary>
            <param name="lst">List of objects</param>
            <param name="shift">Shift value</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.getItemAtParam(System.Collections.Generic.List{System.Object},System.Double)">
            <summary>
            Get item at index in range 0 to 1.
            </summary>
            <param name="lst">List of objects</param>
            <param name="index">Index value from 0 to 1</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.getUnique_Point(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Create a set from only the unique items in a list of points.
            </summary>
            <param name="points">List of points</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.getUnique_Vector(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Vector})">
            <summary>
            Create a set from only the unique items in a list of vectors.
            </summary>
            <param name="vectors">List of vectors</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.getUnique_Plane(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane},System.Boolean)">
            <summary>
            Create a set from only the unique items in a list of planes.
            </summary>
            <param name="planes">List of planes</param>
            <param name="option">Test origin and axes (true) or just axes (false)</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.getUnique_CoordSys(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.CoordinateSystem},System.Boolean)">
            <summary>
            Create a set from only the unique items in a list of coordinate systems.
            </summary>
            <param name="coordSys">List of coordinate systems</param>
            <param name="option">Test origin and axes (true) or just axes (false)</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.alignByXAxis_Plane(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane},Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Aligns XAxis of plane to guide vector (default: World XAxis)
            </summary>
            <param name="planeList">List of planes</param>
            <param name="vec">Alignment vector for XAxes</param>
            <param name="degree">Angle multiplier</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.alignByXAxis_CoordSys(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.CoordinateSystem},Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Aligns XAxis of coordinate systems to guide vector (default: World XAxis)
            </summary>
            <param name="csList">List of coordinate systems</param>
            <param name="vec">Alignment vector for XAxes</param>
            <param name="degree">Angle multiplier</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.flip_Plane(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane},System.Boolean)">
            <summary>
            Reverse normal and retain rotation of plane.
            </summary>
            <param name="planeList">List of planes</param>
            <param name="retain">Retain X-Axis?</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.flip_CoordSys(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.CoordinateSystem},System.Boolean)">
            <summary>
            Reverse normal and retain rotation of coordinate system.
            </summary>
            <param name="csList">List of coordinate systems</param>
            <param name="retain">Retain X-Axis?</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.transform_Plane(System.Collections.Generic.List{System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane}},Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Transform each sublist of planes to World XY plane using average ZAxis.
            </summary>
            <param name="planes">List of list of planes</param>
            <param name="guide">Guide plane</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.transform_CoordSys(System.Collections.Generic.List{System.Collections.Generic.List{Autodesk.DesignScript.Geometry.CoordinateSystem}},Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transform each sublist of coordinate systems to World XY coordinate systems using average ZAxis.
            </summary>
            <param name="coordSys">List of list of planes</param>
            <param name="guide">Guide coordinate system</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.testAngular1_Plane(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane},Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Test plane normals against guide vector using angular tolerance.
            </summary>
            <param name="planeList">Planes to test</param>
            <param name="guide">Guide vector (Default: World -ZAxis)</param>
            <param name="tolerance">Angular tolerance (degrees)</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.testAngular1_CoordSys(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.CoordinateSystem},Autodesk.DesignScript.Geometry.Vector,System.Double)">
            <summary>
            Test coordinate system Z-axes against guide vector using angular tolerance.
            </summary>
            <param name="csList">Coordinate systems to test</param>
            <param name="guide">Guide vector (Default: World -ZAxis)</param>
            <param name="tolerance">Angular tolerance (degrees)</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.testAngular2_Plane(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Plane},System.Double)">
            <summary>
            Test plane normals against each other using angular tolerance.
            </summary>
            <param name="planeList">Planes to test</param>
            <param name="tolerance">Angular tolerance (degrees)</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.Utilities.testAngular2_CoordSys(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.CoordinateSystem},System.Double)">
            <summary>
            Test coordinate system Z-axes against each other using angular tolerance.
            </summary>
            <param name="csList">Coordinate systems to test</param>
            <param name="tolerance">Angular tolerance (degrees)</param>
            <returns></returns>
        </member>
        <member name="T:Dynamo_TORO.RobComm">
            <summary>
            Communicate with robot controller.
            </summary>
        </member>
        <member name="M:Dynamo_TORO.RobComm.findControllers(System.Boolean)">
            <summary>
            Scans network for controllers and returns SystemName, SystemID, Version, and IPAddress.
            </summary>
            <param name="run">True to run</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.RobComm.ProgramFileToController(System.Boolean,System.String[],System.String)">
            <summary>
            Send a .PRG file to controller.
            </summary>
            <param name="run">True to run</param>
            <param name="controllerData">Controller data</param>
            <param name="filePath">File to send</param>
        </member>
        <member name="M:Dynamo_TORO.RobComm.getTargetData(System.Boolean,System.String[])">
            <summary>
            Read RobTargets and JointTargets for MainModule on controller.
            </summary>
            <param name="run">True to run</param>
            <param name="controllerData">Controller data</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.RobComm.getProgramData(System.Boolean,System.String[],System.String)">
            <summary>
            Read tooldata and wobjdata for MainModule on controller.
            </summary>
            <param name="run">True to run</param>
            <param name="controllerData">Controller data</param>
            <param name="moduleName">Module name: MainModule | BASE | user (case sensitive)</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.RobComm.getCurrentPosition(System.Boolean,System.String[])">
            <summary>
            Read RobTarget and JointTarget from current position.
            </summary>
            <param name="run">True to run</param>
            <param name="controllerData">Controller data</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo_TORO.RobComm.setProgramPointer(System.Boolean,System.String[],System.Int32)">
            <summary>
            Set current program pointer on controller.
            </summary>
            <param name="run">True to run</param>
            <param name="controllerData">Controller data</param>
            <param name="value"></param>
        </member>
        <member name="M:Dynamo_TORO.RobComm.getExecutionStatus(System.Boolean,System.String[])">
            <summary>
            Return row of motion pointer [0] and program pointer [1].
            </summary>
            <param name="run">True to run.</param>
            <param name="controllerData">Controller data</param>
            <returns></returns>
        </member>
    </members>
</doc>
